test_large_feval

ReverseDiffTape

julia> @code_native ReverseDiffTape.feval(tt,x,p)
	.section	__TEXT,__text,regular,pure_instructions
Filename: /Users/fqiang/.julia/v0.4/ReverseDiffTape/src/./func_eval.jl
Source line: 206
	pushq	%rbp
	movq	%rsp, %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	movq	%rdx, -80(%rbp)
	movq	%rsi, -88(%rbp)
	movq	%rdi, %r12
Source line: 206
	movq	$4, -72(%rbp)
	movabsq	$jl_pgcstack, %rcx
	movq	(%rcx), %rax
	movq	%rax, -64(%rbp)
	leaq	-72(%rbp), %rax
	movq	%rax, (%rcx)
	movq	$0, -56(%rbp)
	movabsq	$4520236880, %rax       ## imm = 0x10D6D5750
	movq	%rax, -48(%rbp)
	movabsq	$jl_alloc_array_1d, %rax
	movabsq	$4520236880, %rdi       ## imm = 0x10D6D5750
	xorl	%esi, %esi
	callq	*%rax
	movq	%rax, %rbx
Source line: 209
	movabsq	$jl_gc_diff_total_bytes, %r13
	movabsq	$13271419520, %r14      ## imm = 0x31709CA80
Source line: 206
	movq	%rbx, -56(%rbp)
Source line: 209
	movq	(%r14), %r15
	callq	*%r13
	movabsq	$13263340352, %r8       ## imm = 0x3168E8340
	addq	%r15, %rax
	movq	%rax, (%r14)
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	-88(%rbp), %rdx
	movq	-80(%rbp), %rcx
	callq	*%r8
	movsd	%xmm0, -80(%rbp)
Source line: 210
	movabsq	$13271419528, %r15      ## imm = 0x31709CA88
	movq	(%r15), %rbx
	callq	*%r13
	movabsq	$13271419536, %r14      ## imm = 0x31709CA90
	addq	%rbx, %rax
	movq	%rax, (%r15)
	movq	(%r14), %rbx
	callq	*%r13
	addq	%rbx, %rax
	movq	%rax, (%r14)
	movq	-64(%rbp), %rax
Source line: 206
	movabsq	$jl_pgcstack, %rcx
Source line: 210
	movq	%rax, (%rcx)
	movsd	-80(%rbp), %xmm0
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	ret

